This project contains various scripts for uploading data and files.

TransferS3Data.py - Finds transcript and wave files in S3 and puts
audio segment and transcript items in the database.  TransferS3Data
takes three optional arguments - channel, met_min, and met_max.
Providing these arguments limits the processed files to those referring
to the given channel, and labeled as starting sometime between met_min
and met_max.  Note that this will skip any files with data between 
met_min and met_max, but begin before met_min!

AudioUpload.py - Finds transcript and wave files on the local machine,
uploads them to S3, and puts audio segment and transcript items in the
database.

ImageUpload.py - Copies a Flickr album over to S3 and fills in database 
information.

To use, copy src/config-sample.py to src/config.py, and fill in the 
dummy values.  
To run,
	python TransferS3Data.py
	python AudioUpload.py <local base folder> <S3 base folder>
	python ImageUpload.py <Flickr album id> <S3 folder> <Mission name>

AudioUpload uploads all wav and txt files found in the local base folder,
and preserves the directory structure as much as possible.
If the call looks like
	python AudioUpload.py basefolder/ audio/
then a file basefolder/subfolder/file.txt is uploaded as 
audio/subfolder/file.txt in S3.
